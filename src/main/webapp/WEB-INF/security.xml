<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
           
	<global-method-security pre-post-annotations="enabled" />
    
    <http pattern="/favicon.ico" security="none" />
    
    <http use-expressions="true"
		entry-point-ref="apiAuthenticationEntryPoint" pattern="/api/**" >
		<intercept-url pattern="/api/**" access="isAuthenticated()" />
	</http>
    
	<http use-expressions="true" pattern="">
	    <intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/login.html" access="permitAll" />
		<intercept-url pattern="/logout.html" access="permitAll" />
	    <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" />
		<form-login login-page="/login.html" default-target-url="/index.html"  />
		<logout logout-url="/logout.html" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="bcrypt" />
			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select u.username, r.role from hbys_user u, hbys_user_hbys_role ur, hbys_role r WHERE ur.users_id = u.id AND ur.roles_id = r.id AND u.username = ?"
				users-by-username-query="SELECT u.username, u.password, u.enabled FROM hbys_user u WHERE u.username = ?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>